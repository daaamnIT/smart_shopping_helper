import requests
import json
import re


def parse_ingredients(recipe: str) -> dict:
    """
    –ü–∞—Ä—Å–∏—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏–∑ —Ä–µ—Ü–µ–ø—Ç–∞ –≤ —Å–ª–æ–≤–∞—Ä—å
    """
    ingredients_dict = {}

    # –ù–∞—Ö–æ–¥–∏–º —Å–µ–∫—Ü–∏—é —Å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏
    ingredients_section = ""
    if "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:" in recipe:
        sections = recipe.split("–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:")
        if len(sections) > 0:
            ingredients_section = sections[0].split("–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:")[1].strip()
    else:
        sections = recipe.split("\n\n")
        if len(sections) > 0:
            ingredients_section = sections[0]

    if not ingredients_section:
        return ingredients_dict

    # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
    lines = ingredients_section.split('\n')

    for line in lines:
        line = line.strip()
        if not line or line == "**":  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ **
            continue

        # –£–±–∏—Ä–∞–µ–º –∑–≤–µ–∑–¥–æ—á–∫–∏, —Ç–æ—á–∫–∏ —Å –∑–∞–ø—è—Ç–æ–π –∏ —Ç–æ—á–∫–∏ –≤ –∫–æ–Ω—Ü–µ
        line = line.strip('*., ;')

        # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        pattern = r'^(.*?)(?:[-‚Äî‚Äì]\s*)([\d.,]+\s*(?:–≥|–∫–≥|–º–ª|–ª|—à—Ç|—Å—Ç\.|—á\.|—Å—Ç\.–ª\.|—á\.–ª\.|—à—Ç—É–∫|–≥—Ä–∞–º–º|–≥—Ä–∞–º–º–∞|–≥—Ä–∞–º–º–æ–≤|–ª–∏—Ç—Ä|–ª–∏—Ç—Ä–∞|–ª–∏—Ç—Ä–æ–≤|–∑—É–±—á–∏–∫|–∑—É–±—á–∏–∫–∞|—à—Ç—É–∫–∏|–ø—É—á–æ–∫|–ø—É—á–∫–∞|–±–∞–Ω–∫–∞|—É–ø–∞–∫–æ–≤–∫–∞|—Å—Ç–∞–∫–∞–Ω|—Å—Ç–∞–∫–∞–Ω–∞)|\s*–ø–æ\s*–≤–∫—É—Å—É)'

        match = re.match(pattern, line, re.IGNORECASE)
        if match:
            name, amount = match.groups()
            name = name.strip('* ')  # –£–±–∏—Ä–∞–µ–º –∑–≤–µ–∑–¥–æ—á–∫–∏ –∏ –ø—Ä–æ–±–µ–ª—ã

            # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ "–ø–æ –≤–∫—É—Å—É", –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç
            if '–ø–æ –≤–∫—É—Å—É' in amount.lower():
                continue

            ingredients_dict[name.lower()] = amount.strip()

    return ingredients_dict


def format_recipe(raw_recipe: str) -> tuple:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ—Ü–µ–ø—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–∞–∫ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, —Å–ª–æ–≤–∞—Ä—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞
    """
    # –ë–∞–∑–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    formatted = raw_recipe.replace('\n\n', '\n')

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞, –µÔøΩÔøΩ–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    title = ""
    if ":" in formatted.split("\n")[0]:
        title = formatted.split("\n")[0].split(":")[0].strip()

    if "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã" not in formatted:
        formatted = f"ü•ò {title}\n\n–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:\n" + formatted
    elif title:
        formatted = f"ü•ò {title}\n\n" + formatted

    # –ü–∞—Ä—Å–∏–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
    ingredients = parse_ingredients(raw_recipe)

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
    ingredients_text = "\n\n–°–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ:\n"
    for name, amount in ingredients.items():
        ingredients_text += f"‚Ä¢ {name}: {amount}\n"

    return formatted + ingredients_text, ingredients, title


def get_recipe(query: str, user_dict: dict) -> tuple:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –≤–∏–¥–∞ "–±–æ—Ä—â –Ω–∞ 2 –ø–æ—Ä—Ü–∏–∏" –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ—Ü–µ–ø—Ç –æ—Ç YandexGPT,
    —Å–ª–æ–≤–∞—Ä—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π
    """
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    portions = 1
    portions_match = re.search(r'–Ω–∞ (\d+) –ø–æ—Ä—Ü–∏[–∏–π]', query.lower())
    if portions_match:
        portions = int(portions_match.group(1))

    API_KEY = 'AQVN2lI_NW4aqQAZKXjE37BeQzGaEHNIvKudc0zn'
    URL = 'https://llm.api.cloud.yandex.net/foundationModels/v1/completion'

    headers = {
        'Authorization': f'Api-Key {API_KEY}',
        'Content-Type': 'application/json'
    }

    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞
    restrictions = []
    if user_dict.get('allergies'):
        restrictions.append(f"–ù–ï–õ–¨–ó–Ø –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –∞–ª–ª–µ—Ä–≥–∏—è: {', '.join(user_dict['allergies'])}")
    if user_dict.get('unliked_products'):
        restrictions.append(f"–ù–ï –∏—Å–ø–æ–ª—å–∑—É–π —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã: {', '.join(user_dict['unliked_products'])}")

    restrictions_text = "\n".join(restrictions)

    system_prompt = f"""–¢—ã - –æ–ø—ã—Ç–Ω—ã–π –ø–æ–≤–∞—Ä. –ù–∞–ø–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –±–ª—é–¥–∞.
    {restrictions_text}

    –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–≥–æ —Ç–∞–∫–æ–π:

    [–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞]:

    –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:
    ‚Ä¢ –ø—Ä–æ–¥—É–∫—Ç - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ

    –ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:
    1. –®–∞–≥ –ø–µ—Ä–≤—ã–π
    2. –®–∞–≥ –≤—Ç–æ—Ä–æ–π"""
    # print(system_prompt)
    data = {
        "modelUri": "gpt://b1gjsebilk1g8hvtc07c/yandexgpt-lite",
        "completionOptions": {
            "stream": False,
            "temperature": 0.6,
            "maxTokens": 2000
        },
        "messages": [
            {
                "role": "system",
                "text": system_prompt
            },
            {
                "role": "user",
                "text": f"–ù–∞–ø–∏—à–∏ —Ä–µ—Ü–µ–ø—Ç: {query}"
            }
        ]
    }

    try:
        response = requests.post(URL, headers=headers, json=data)
        response.raise_for_status()

        result = response.json()
        recipe = result['result']['alternatives'][0]['message']['text']

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –ø–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
        formatted_recipe, ingredients_dict, title = format_recipe(recipe)
        return formatted_recipe, ingredients_dict, portions, title

    except Exception as e:
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ—Ü–µ–ø—Ç–∞: {str(e)}", {}, 1, ""


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
# if __name__ == "__main__":
#     query = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π: ")
#     recipe_text, ingredients, portions, title = get_recipe(query, user_dict={})
#     print("\n–ü–æ–ª–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç:")
#     print(recipe_text)
#     print("\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π:", portions)
#     print("\n–°–ª–æ–≤–∞—Ä—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤:")
#     print(json.dumps(ingredients, ensure_ascii=False, indent=2))
